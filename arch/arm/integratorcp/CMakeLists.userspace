INCLUDE(CMakeForceCompiler)
SET(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_C_COMPILER arm-linux-gnueabi-gcc)
CMAKE_FORCE_C_COMPILER(arm-linux-gnueabi-gcc GNU)
find_program(ASM_EXECUTABLE arm-linux-gnueabi-as)
set(APPEND_LD_ARGUMENTS -Wl,-lgcc)
set(ASM_FORMAT )
set(CMAKE_C_FLAGS "-Wall -O0 -static -nostdinc -fno-builtin -nostdlib -fno-stack-protector -fno-common -mapcs -marm")
if(CMAKE_COMPILER_IS_GNUCC)
# The -gstabs2 option is needed for stack traces but only supported by GCC
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -gstabs2")
endif(CMAKE_COMPILER_IS_GNUCC)

